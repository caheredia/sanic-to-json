{
	"info": {
		"_postman_id": "3e2c899a-3e7e-4dc3-bc27-5750362e2858",
		"name": "Internal ACP API",
		"description": "\nThis internal API is used to retreive data from ACP by Project ID. \nAll inputs and returns are in the form of raw JSON (application/json). \nThe variables need to run the API are in the `ACP_root` environment. \n\n\nMost inputs will require the following inputs: \n\n- token\n\n- project_id\n\n\nSome will require extra qualifiers, e.g., 'org_type' for `org_names_by_type` and 'project_detail' for `project_detail`\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "acp_v1",
			"item": [
				{
					"name": "/token",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"{{username}}\", \"password\":\"{{password}}\"}"
						},
						"url": {
							"raw": "{{data_url}}token",
							"host": [
								"{{data_url}}token"
							]
						},
						"description": "Returns json formatted accumulo token."
					},
					"response": []
				},
				{
					"name": "/project-details",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\",\n\"project_detail\":\"project_sector\"}"
						},
						"url": {
							"raw": "{{acp_url}}project-details",
							"host": [
								"{{acp_url}}project-details"
							]
						},
						"description": "Retrieves project profile detail. \n    \n\nNeeds three inputs \n- token\n- project_id\n- project_detail\n\n\n    Available `project_detail` qualifiers are:\n- project_name\n- project_impact\n- project_state\n- project_sector."
					},
					"response": [
						{
							"name": "/project-details",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{target_url}}project-details",
									"host": [
										"{{target_url}}project-details"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "5"
								},
								{
									"key": "Content-Length",
									"value": "21"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": \"Healthcare\"\n}"
						}
					]
				},
				{
					"name": "/org-names-by-types",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{acp_url}}org-names-by-types",
							"host": [
								"{{acp_url}}org-names-by-types"
							]
						},
						"description": "Retrieves org names accoding to type. \n\n    \n\nNeeds three inputs \n- token\n- project_id\n- org_type\n\n\n    Available `org_type` qualifiers are:\n    \n - supplier \n - end_customer \n - reseller\n - customs_clearing_agent \n - carrier \n - freight_forwarder\n - shipping_insurer."
					},
					"response": []
				},
				{
					"name": "/goods-descriptions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}goods-descriptions",
							"host": [
								"{{acp_url}}goods-descriptions"
							]
						},
						"description": "Retrieves goods description for a specific project ID"
					},
					"response": []
				},
				{
					"name": "/base-prices",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}base-prices",
							"host": [
								"{{finance_url}}base-prices"
							]
						},
						"description": "\"Given a project_id, returns the base price of the project in USD, net of reseller contributions.\n\n    \n\nInputs \n    \n- token\n- project_id\n    \n\nExtracts payable invoice amounts from cash_flow_df and converts to US dollars, then sums them,\n    \nthen subtracts reseller contribution from project_df. See get_base_price in finances.py"
					},
					"response": []
				},
				{
					"name": "/milestones",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}milestones",
							"host": [
								"{{finance_url}}milestones"
							]
						},
						"description": "Returns JSON of the cash flow dates, amounts, and details for the project. \n    Created for filling the \"Milestones\nOutflow/Inflow\" section of the ACP.\n\nInputs \n- token\n- project_id"
					},
					"response": []
				},
				{
					"name": "/acp-project-descriptions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/javascript",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}acp-project-descriptions",
							"host": [
								"{{acp_url}}acp-project-descriptions"
							]
						},
						"description": "Returns contract numbers, po numbers, po amounts in USD, and goods item descriptions"
					},
					"response": []
				},
				{
					"name": "/reseller-contributions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}reseller-contributions",
							"host": [
								"{{finance_url}}reseller-contributions"
							]
						},
						"description": "Returns the sum of reseller contributions to the project in USD"
					},
					"response": []
				},
				{
					"name": "/coverage-ratios",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}coverage-ratios",
							"host": [
								"{{finance_url}}coverage-ratios"
							]
						},
						"description": "Return data from get_acp_project_description_table"
					},
					"response": []
				},
				{
					"name": "/project-terms",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}project-terms",
							"host": [
								"{{finance_url}}project-terms"
							]
						},
						"description": "Return data from get_acp_project_description_table"
					},
					"response": []
				},
				{
					"name": "/break-even-dates",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}break-even-dates",
							"host": [
								"{{finance_url}}break-even-dates"
							]
						},
						"description": "Return data from get_acp_project_description_table"
					},
					"response": []
				},
				{
					"name": "/supplier-descriptions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}supplier-descriptions",
							"host": [
								"{{acp_url}}supplier-descriptions"
							]
						},
						"description": "Return data from get_acp_project_description_table"
					},
					"response": []
				},
				{
					"name": "/project-organization-risk-levels-and-summaries",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}project-organization-risk-levels-and-summaries",
							"host": [
								"{{acp_url}}project-organization-risk-levels-and-summaries"
							]
						},
						"description": "Return data from get_project_organization_risk_levels_and_summaries"
					},
					"response": []
				},
				{
					"name": "/country-exemptions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}country-exemptions",
							"host": [
								"{{acp_url}}country-exemptions"
							]
						},
						"description": "Return data from get_country_exemptions"
					},
					"response": []
				},
				{
					"name": "/red-flags",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}red-flags",
							"host": [
								"{{acp_url}}red-flags"
							]
						},
						"description": "Return data from get_red_flags"
					},
					"response": []
				},
				{
					"name": "/site-reports",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}site-reports",
							"host": [
								"{{acp_url}}site-reports"
							]
						},
						"description": "Return data from get_site_report"
					},
					"response": []
				},
				{
					"name": "/contract-activities",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}contract-activities",
							"host": [
								"{{acp_url}}contract-activities"
							]
						},
						"description": "Descriptions of the activities that need to be carried out in the course of completing each contract"
					},
					"response": []
				},
				{
					"name": "/contract-verifications",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}contract-verifications",
							"host": [
								"{{acp_url}}contract-verifications"
							]
						},
						"description": "Returns whether the end customer contract was verified and who verified it."
					},
					"response": []
				},
				{
					"name": "/contract-amounts",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}contract-amounts",
							"host": [
								"{{finance_url}}contract-amounts"
							]
						},
						"description": "Return the amounts in USD for all the contracts and POs"
					},
					"response": []
				},
				{
					"name": "/payment-terms",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}payment-terms",
							"host": [
								"{{finance_url}}payment-terms"
							]
						},
						"description": "Return data from get_payment_terms"
					},
					"response": []
				},
				{
					"name": "/performance-bonds",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}performance-bonds",
							"host": [
								"{{finance_url}}performance-bonds"
							]
						},
						"description": "Returns details about the performance bonds in the project"
					},
					"response": []
				},
				{
					"name": "/contract-and-po-numbers",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}contract-and-po-numbers",
							"host": [
								"{{acp_url}}contract-and-po-numbers"
							]
						},
						"description": "Returns contract and po numbers in the project"
					},
					"response": []
				},
				{
					"name": "/product-costs",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}product-costs",
							"host": [
								"{{finance_url}}product-costs"
							]
						},
						"description": "Returns the total cost of just the physical goods in the project"
					},
					"response": []
				},
				{
					"name": "/logistics-and-insurance-and-inspection-costs",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}logistics-and-insurance-and-inspection-costs",
							"host": [
								"{{finance_url}}logistics-and-insurance-and-inspection-costs"
							]
						},
						"description": "Returns the total cost of logistics, insurance, and customs inspection in the project."
					},
					"response": []
				},
				{
					"name": "/duty-and-agency-customs-and-vat-costs",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}duty-and-agency-customs-and-vat-costs",
							"host": [
								"{{finance_url}}duty-and-agency-customs-and-vat-costs"
							]
						},
						"description": "Returns returns the total cost of duty, customs clearing agency charges, and vat in the project"
					},
					"response": []
				},
				{
					"name": "/other-costs",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}other-costs",
							"host": [
								"{{finance_url}}other-costs"
							]
						},
						"description": "Returns the total cost 'other' costs in the project (USD)"
					},
					"response": []
				},
				{
					"name": "/collateral-tables",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}collateral-tables",
							"host": [
								"{{finance_url}}collateral-tables"
							]
						},
						"description": "Return data from get_other_cost_usd"
					},
					"response": []
				},
				{
					"name": "/funding-conditions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}funding-conditions",
							"host": [
								"{{finance_url}}funding-conditions"
							]
						},
						"description": "Conditions that the project needs to fulfill in order to be considered for funding"
					},
					"response": []
				},
				{
					"name": "/is-framework-contract",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}is-framework-contract",
							"host": [
								"{{acp_url}}is-framework-contract"
							]
						},
						"description": "Contract numbers and a boolean representing whether they are\n    framework contracts"
					},
					"response": [
						{
							"name": "/is-framework-contract",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{target_url}}is-framework-contract",
									"host": [
										"{{target_url}}is-framework-contract"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "5"
								},
								{
									"key": "Content-Length",
									"value": "158"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"contract_number\": \"KEMSA/ONT02/2017-2019\",\n            \"framework_contract\": \"True\"\n        },\n        {\n            \"contract_number\": \"KEMSA/OIT08/2018-2020\",\n            \"framework_contract\": \"True\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/contract-incoterms",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}contract-incoterms",
							"host": [
								"{{acp_url}}contract-incoterms"
							]
						},
						"description": "Returns a data frame of contract number and a string indicating the contract's incoterm"
					},
					"response": []
				},
				{
					"name": "/customs-clearing-agent-approval-status",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}customs-clearing-agent-approval-status",
							"host": [
								"{{acp_url}}customs-clearing-agent-approval-status"
							]
						},
						"description": "Returns a data indexed by organization ID. \n\n    Includes a boolean for 'approved customs clearing agent' \n    and a free text justification for using the customs clearing agent\n    if it's the first time using them. Also contains a column for customs clearing agent name.\n    "
					},
					"response": []
				},
				{
					"name": "/person-credit-report-findings",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}person-credit-report-findings",
							"host": [
								"{{acp_url}}person-credit-report-findings"
							]
						},
						"description": "Returns a dataframe by person given name, family name, credit report number, and date"
					},
					"response": []
				},
				{
					"name": "/organization-credit-report-findings",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}organization-credit-report-findings",
							"host": [
								"{{acp_url}}organization-credit-report-findings"
							]
						},
						"description": "Return data by organization name, credit report number, and date"
					},
					"response": []
				},
				{
					"name": "/credit-report-consent-letters",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}credit-report-consent-letters",
							"host": [
								"{{acp_url}}credit-report-consent-letters"
							]
						},
						"description": "Return organization ID and a boolean for whether consent letter is signed for credit report running."
					},
					"response": []
				},
				{
					"name": "/business-intelligence-report-findings",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}business-intelligence-report-findings",
							"host": [
								"{{acp_url}}business-intelligence-report-findings"
							]
						},
						"description": "Returns organization name, business intelligence report number, and date"
					},
					"response": []
				},
				{
					"name": "/country-of-origin-from-supplier-pro-forma-invoices",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}country-of-origin-from-supplier-pro-forma-invoices",
							"host": [
								"{{acp_url}}country-of-origin-from-supplier-pro-forma-invoices"
							]
						},
						"description": "Return data by organization name, invoice number, and country of origin"
					},
					"response": []
				},
				{
					"name": "/base-price-of-previous-kountable-reseller-projects",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}base-price-of-previous-kountable-reseller-projects",
							"host": [
								"{{finance_url}}base-price-of-previous-kountable-reseller-projects"
							]
						},
						"description": "Each row is a reseller organization in the given project and each column is either\n    a previous project count or a the base price sum of all previous projects by project status."
					},
					"response": []
				},
				{
					"name": "/receivables-of-previous-kountable-end-customer-projects",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}receivables-of-previous-kountable-end-customer-projects",
							"host": [
								"{{finance_url}}receivables-of-previous-kountable-end-customer-projects"
							]
						},
						"description": "Each row is an end customer organization in the given project and each column is either\n    a previous project count or the total receivables sum of all previous projects by project status."
					},
					"response": []
				},
				{
					"name": "/previous-project-advances-to-suppliers",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{finance_url}}previous-project-advances-to-suppliers",
							"host": [
								"{{finance_url}}previous-project-advances-to-suppliers"
							]
						},
						"description": "Returns data where each row is an end customer organization in the given project and each column is either\n    a previous project count or the total receivables sum of all previous projects by project status"
					},
					"response": []
				},
				{
					"name": "/shipper-and-reseller-exp-of-supplier-pro-forma-invoices",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/javascript",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}shipper-and-reseller-exp-of-supplier-pro-forma-invoices",
							"host": [
								"{{acp_url}}shipper-and-reseller-exp-of-supplier-pro-forma-invoices"
							]
						},
						"description": "Returns shipper organization IDs, shipper types (carrier or freight forwarder), supplier_pro_forma_invoice\n    numbers, and supplier organization IDs"
					},
					"response": []
				},
				{
					"name": "/reseller-non-kountable-experience-with-end-customers",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}reseller-non-kountable-experience-with-end-customers",
							"host": [
								"{{acp_url}}reseller-non-kountable-experience-with-end-customers"
							]
						},
						"description": "Returns reseller IDs, end customer IDs, and the non-Kountable experience between the two."
					},
					"response": []
				},
				{
					"name": "/reseller-non-kountable-experience-with-suppliers",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}reseller-non-kountable-experience-with-suppliers",
							"host": [
								"{{acp_url}}reseller-non-kountable-experience-with-suppliers"
							]
						},
						"description": "Returns reseller IDs, end customer IDs, and the non-Kountable experience between the two."
					},
					"response": []
				},
				{
					"name": "/logistics",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"token\":\"{{token}}\", \n\"project_id\":\"{{project_id}}\"}"
						},
						"url": {
							"raw": "{{acp_url}}logistics",
							"host": [
								"{{acp_url}}logistics"
							]
						},
						"description": "Returns incoterms, ports of loading and discharge, ground transport, final destination\n    address, and warehouse location for each shipment of the project.\n\n    (for the time being this is supplier_pro_forma_invoice based, but in the future it could be consignment based\n    or shipper (freight_forwarder/carrier) pro_forma_invoice based)"
					},
					"response": []
				},
				{
					"name": "data ",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{token}}\",\n    \"table\": \"records\",\n    \"user\": \"{{username}}\",\n    \"updates\": {\n        \"P00014287\": [\n            {\n                \"old\": {\n                    \"family\": \"profile\",\n                    \"qualifier\": \"project_name\",\n                    \"visibility\": \"base\",\n                    \"value\": \"Kirata Africa Limited, 2019-2\"\n                },\n                \"new\": {\n                    \"family\": \"profile\",\n                    \"qualifier\": \"project_name\",\n                    \"visibility\": \"base\",\n                    \"value\": \"Kirata Africa Limited, 2019-2\"\n                }\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{data_url}}data",
							"host": [
								"{{data_url}}data"
							]
						},
						"description": "Updates or adds key-values to table without overwriting another user's concurrent update.\n    If another user has updated the table concurrently, and error is given. It's up to the PUT requester\n    to have the old family, qualifier, visibility, and value information (e.g. via a prior GET request). Also, if no old\n    key-value is given, the new key-value will only be updated if it does not already exist.\n\n    updates: Dict with row IDs as keys. Values are lists of old and new key-value updates."
					},
					"response": [
						{
							"name": "get",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{data_url}}data",
									"host": [
										"{{data_url}}data"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "5"
								},
								{
									"key": "Content-Length",
									"value": "146"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"row\": \"P00014287\",\n            \"family\": \"profile\",\n            \"qualifier\": \"project_state\",\n            \"visibility\": \"base\",\n            \"timestamp\": 1561160047896,\n            \"value\": \"kyc_complete\"\n        }\n    ]\n}"
						},
						{
							"name": "put",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{token}}\",\n    \"table\": \"records\",\n    \"user\": \"{{username}}\",\n    \"updates\": {\n        \"P00014287\": [\n            {\n                \"old\": {\n                    \"family\": \"profile\",\n                    \"qualifier\": \"project_name\",\n                    \"visibility\": \"base\",\n                    \"value\": \"Kirata Africa Limited, 2019-2\"\n                },\n                \"new\": {\n                    \"family\": \"profile\",\n                    \"qualifier\": \"project_name\",\n                    \"visibility\": \"base\",\n                    \"value\": \"Kirata Africa Limited, 2019-2\"\n                }\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{data_url}}data",
									"host": [
										"{{data_url}}data"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "5"
								},
								{
									"key": "Content-Length",
									"value": "24"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"P00014287\": 0\n    }\n}"
						}
					]
				},
				{
					"name": "New ACP Vote",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{token}}\",\n    \"project_id\": \"{{project_id}}\",\n    \"email\": \"bob_the_underwriter@kountable.com\",\n    \"vote\": \"approve\"\n}"
						},
						"url": {
							"raw": "{{base_url}}v1/voting/acp-votes",
							"host": [
								"{{base_url}}v1"
							],
							"path": [
								"voting",
								"acp-votes"
							]
						},
						"description": "A user will submitted an approve or reject vote for a project, based on review of the project's approval committee packet (ACP)"
					},
					"response": []
				},
				{
					"name": "Change ACP Vote",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{token}}\",\n    \"project_id\": \"{{project_id}}\",\n    \"email\": \"bob_the_underwriter@kountable.com\",\n    \"vote\": \"reject\"\n}"
						},
						"url": {
							"raw": "{{base_url}}v1/voting/acp-votes",
							"host": [
								"{{base_url}}v1"
							],
							"path": [
								"voting",
								"acp-votes"
							]
						},
						"description": "A user will submitted an approve or reject vote for a project, based on review of the project's approval committee packet (ACP)"
					},
					"response": []
				},
				{
					"name": "Delete ACP Vote",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{token}}\",\n    \"project_id\": \"{{project_id}}\",\n    \"email\": \"bob_the_underwriter@kountable.com\",\n    \"vote\": \"reject\"\n}"
						},
						"url": {
							"raw": "{{base_url}}v1/voting/acp-votes",
							"host": [
								"{{base_url}}v1"
							],
							"path": [
								"voting",
								"acp-votes"
							]
						},
						"description": "A user will submitted an approve or reject vote for a project, based on review of the project's approval committee packet (ACP)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Health Check",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}healthz",
					"host": [
						"{{base_url}}healthz"
					]
				}
			},
			"response": [
				{
					"name": "Health Check example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{base_url}}healthz",
							"host": [
								"{{base_url}}healthz"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Wed, 07 Aug 2019 17:44:17 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "39"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"uptime\": \" 17:44:17 up 13 days 21:56\"\n}"
				}
			]
		},
		{
			"name": "/notifications",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-amz-sns-message-type",
						"value": " Notification",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"project_id\":\"P00014287\"}"
				},
				"url": {
					"raw": "{{base_url}}v1/project-feed/notifications",
					"host": [
						"{{base_url}}v1"
					],
					"path": [
						"project-feed",
						"notifications"
					]
				}
			},
			"response": []
		},
		{
			"name": "/projects",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				},
				"description": "get all projects "
			},
			"response": []
		}
	]
}